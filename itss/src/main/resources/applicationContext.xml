<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"  xmlns:cache="http://www.springframework.org/schema/cache" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>
	
		
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:itss.properties" />
	<!-- 加载应用属性实例，可通过  @Value("#{APP_PROPERTIES['jdbc.driver']}") String jdbcDriver 方式引用 -->
    <util:properties id="APP_PROPERTIES" location="classpath:itss.properties" local-override="true"/>
	
	<context:annotation-config />

	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize" value="${web.maxUploadSize}" />  
	</bean>
    
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.kingen">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	
	
<!--     <bean id="sessionFactory" -->
<!--         class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
<!--         <property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="packagesToScan" value="com.kingen.bean" ></property> -->
<!--         <property name="hibernateProperties"> -->
<!--             <value> -->
<!--                 hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect -->
<!--                 hibernate.show_sql=true -->
<!--                 hibernate.jdbc.fetch_size=50 -->
<!--                 hibernate.jdbc.batch_size=50 -->
<!--                 hibernate.connection.autocommit=true -->
<!--                 hibernate.connection.release_mode=auto -->
<!--                 hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext -->
<!--                 javax.persistence.validation.mode=none -->
<!--             </value> -->
<!--         </property> -->
        
        
<!--     </bean> -->
    
   <!--  定义事务管理--> 
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
    <!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->
	<cache:annotation-driven cache-manager="springCacheManager" mode="proxy" />
<!--     <import resource="classpath:applicationCotext-cache.xml"/> -->
    
    
        
	
	
		 
	<!-- production环境 -->
 	<beans profile="production">
 		<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" />	
		
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<!-- to  -->
		<bean id="dataSourceTo" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="minIdle" value="0" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		
		<!-- from  -->
		
		
		
		<bean id="dataSourceMySql" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${mysql.jdbc.driverClass}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.user}" />
		<property name="password" value="${mysql.jdbc.password}" />
		
	</bean>

	<bean id="dataSourceOracle" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${oracle.jdbc.driverClass}" />
		<property name="url" value="${oracle.jdbc.url}" />
		<property name="username" value="${oracle.jdbc.user}" />
		<property name="password" value="${oracle.jdbc.password}" />
		
	</bean>
	
	<bean id="dataSourceSqlserver" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${sqlserver.jdbc.driverClass}" />
		<property name="url" value="${sqlserver.jdbc.url}" />
		<property name="username" value="${sqlserver.jdbc.user}" />
		<property name="password" value="${sqlserver.jdbc.password}" />
		
	</bean>
	
	
	<bean id="dataSource" class="com.kingen.util.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSourceMySql" value-ref="dataSourceMySql" />
				<entry key="dataSourceOracle" value-ref="dataSourceOracle" />
				<entry key="dataSourceSqlserver" value-ref="dataSourceSqlserver" />
				<entry key="dataSourceTo" value-ref="dataSourceTo" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceTo" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
		 <property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.kingen.bean" ></property>
        <property name="hibernateProperties">
            <value>
<!--                 hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect -->
                hibernate.dialect=com.kingen.util.SQLServerCustomDialect
                hibernate.show_sql=true
                hibernate.jdbc.fetch_size=50
                hibernate.jdbc.batch_size=50
                hibernate.connection.autocommit=true
                hibernate.connection.release_mode=auto
                hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
                javax.persistence.validation.mode=none
            </value>
        </property>
	</bean>
	
	
<!-- 	<bean id="dataSourceInterceptor" class="com.core.DataSourceInterceptor" /> -->

<!-- 	<aop:config> -->
<!-- 		<aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor"> -->
<!-- 			<aop:pointcut id="dsMysql" expression="execution(* com.controller.mysql.*.*(..))" /> -->
<!-- 			<aop:pointcut id="dsOracle" expression="execution(* com.controller.oracle.*.*(..))" /> -->
<!-- 			<aop:before method="setdataSourceMysql" pointcut-ref="dsMysql"/> -->
<!-- 			<aop:before method="setdataSourceOracle" pointcut-ref="dsOracle"/> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	
	
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->
	</beans>
	<!-- dev环境 -->
 	<beans profile="dev">
 		<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application-dev.properties" />	
		
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<!-- to  -->
		<bean id="dataSourceTo" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="minIdle" value="0" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		
		<!-- from  -->
		
		
		
		<bean id="dataSourceMySql" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${mysql.jdbc.driverClass}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.user}" />
		<property name="password" value="${mysql.jdbc.password}" />
		
	</bean>

	<bean id="dataSourceOracle" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${oracle.jdbc.driverClass}" />
		<property name="url" value="${oracle.jdbc.url}" />
		<property name="username" value="${oracle.jdbc.user}" />
		<property name="password" value="${oracle.jdbc.password}" />
		
	</bean>
	
	<bean id="dataSourceSqlserver" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${sqlserver.jdbc.driverClass}" />
		<property name="url" value="${sqlserver.jdbc.url}" />
		<property name="username" value="${sqlserver.jdbc.user}" />
		<property name="password" value="${sqlserver.jdbc.password}" />
		
	</bean>
	
	
	<bean id="dataSource" class="com.kingen.util.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSourceMySql" value-ref="dataSourceMySql" />
				<entry key="dataSourceOracle" value-ref="dataSourceOracle" />
				<entry key="dataSourceSqlserver" value-ref="dataSourceSqlserver" />
				<entry key="dataSourceTo" value-ref="dataSourceTo" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceTo" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
		 <property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.kingen.bean" ></property>
        <property name="hibernateProperties">
            <value>
<!--                 hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect -->
<!--                 hibernate.dialect=com.kingen.util.SQLServerCustomDialect -->
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.show_sql=true
                hibernate.jdbc.fetch_size=50
                hibernate.jdbc.batch_size=50
                hibernate.connection.autocommit=true
                hibernate.connection.release_mode=auto
                hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
                javax.persistence.validation.mode=none
                
                hibernate.hbm2ddl.auto=update
            </value>
        </property>
	</bean>
	
	
<!-- 	<bean id="dataSourceInterceptor" class="com.core.DataSourceInterceptor" /> -->

<!-- 	<aop:config> -->
<!-- 		<aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor"> -->
<!-- 			<aop:pointcut id="dsMysql" expression="execution(* com.controller.mysql.*.*(..))" /> -->
<!-- 			<aop:pointcut id="dsOracle" expression="execution(* com.controller.oracle.*.*(..))" /> -->
<!-- 			<aop:before method="setdataSourceMysql" pointcut-ref="dsMysql"/> -->
<!-- 			<aop:before method="setdataSourceOracle" pointcut-ref="dsOracle"/> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	
	
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->
	</beans>
	<!-- 下面不能配置内容了 -->
</beans>